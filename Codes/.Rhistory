paste("Quiz_", seq(1:ncol(scores.matrix)))
paste("Student_", seq(1:nrow(scores.matrix)))
dimnames(scores.matrix) <- list(
paste("Student_", seq(1:nrow(scores.matrix))),
paste("Quiz_", seq(1:ncol(scores.matrix)))
)
print(scores.matrix)
colleges.info["State"]
# Prob 4
Name = c("Pomana", "Williams","Stanford","Princeton", "Yale")
State = c("CA", "MA", "CA","NJ", "CT")
Cost = c(62632, 64020, 62801, 58965, 63970)
Population = c(1610, 2150, 18346, 8014, 12109)
colleges.info = data.frame(Name, State, Cost, Population)
colleges.info["State"]
summary(colleges.info["State"])
summary(colleges.info["Cost"])
# 4.a
summary(colleges.info$State)
summary(colleges.info$Cost)
#4.b
subset(colleges.info, Population > 5000)
colleges.info.2016 <- colleges.info[,c(1:2,4)]
print(colleges.info.2016)
colleges.info.2016$Cost <- colleges.info$Cost + colleges.info$Cost * 0.5
print(colleges.info.2016)
round(1.1234, 2)
round(1.1234, 0)
colleges.info.2016$Cost <- round(colleges.info$Cost + colleges.info$Cost * 0.5, 0)
print(colleges.info.2016)
setX <- c(45, 80, 83, 78, 75, 77, 79, 83, 83, 100)
# Prob 1
#1.a
set.mean <- mean(setX)
#1.b
set.median <- median(setX)
#1.c
set.variance <- var(setX)
#1.d
set.std <- sd(setX)
#1.e
set.iqr <- IQR(setX)
# Prob 3
# 3.a
set.3a = setX < set.mean
# 3.b
setX[setX < set.mean]
# 3.c
setX[seq(1, length(setX), by = 2)]
# 3.d
scores.matrix <- matrix(setX, nrow=2, ncol=5, byrow = TRUE)
print(scores.matrix)
# 3.e
scores.matrix[,c(1,ncol(scores.matrix))]
# 3.f
dimnames(scores.matrix) <- list(
paste("Student_", seq(1:nrow(scores.matrix))),
paste("Quiz_", seq(1:ncol(scores.matrix)))
)
print(scores.matrix)
# Prob 4
Name = c("Pomana", "Williams","Stanford","Princeton", "Yale")
State = c("CA", "MA", "CA","NJ", "CT")
Cost = c(62632, 64020, 62801, 58965, 63970)
Population = c(1610, 2150, 18346, 8014, 12109)
colleges.info = data.frame(Name, State, Cost, Population)
# 4.a
summary(colleges.info$State)
summary(colleges.info$Cost)
#4.b
subset(colleges.info, Population > 5000)
colleges.info.2016 <- colleges.info[,c(1:2,4)]
colleges.info.2016$Cost <- round(colleges.info$Cost + colleges.info$Cost * 0.5, 0)
print(colleges.info.2016)
#Read in data
selfesteem.data <- read.csv(".\\lab02.csv")
selfesteem.data
#Basic Scatterplot
?plot
plot(selfesteem.data$Height,selfesteem.data$Selfesteem)
View(scores.matric)
View(colleges.info)
View(selfesteem.data)
plot(selfesteem.data$Selfesteem,selfesteem.data$Height)
#Scatterplot with labs, and controlling axes
plot(selfesteem.data$Selfesteem,selfesteem.data$Height,
main="Scatterplot of House Price versus Size",
xlab = "Size", ylab="House Price",
xlim=c(1400, 2600), ylim=c(140000, 300000), pch = 8, col="seagreen3",
cex=1.5, cex.lab = 1.5, cex.main = 1.5)
#Scatterplot with labs, and controlling axes
plot(selfesteem.data$Selfesteem,selfesteem.data$Height,
main="Scatterplot of House Price versus Size",
xlab = "Size", ylab="House Price",
xlim=c(1400, 2600), ylim=c(50, 100), pch = 8, col="seagreen3",
cex=1.5, cex.lab = 1.5, cex.main = 1.5)
#Scatterplot with labs, and controlling axes
plot(selfesteem.data$Selfesteem,selfesteem.data$Height,
main="Scatterplot of House Price versus Size",
xlab = "Size", ylab="House Price",
xlim=c(2, 4), ylim=c(50, 100), pch = 8, col="seagreen3",
cex=1.5, cex.lab = 1.5, cex.main = 1.5)
#Scatterplot with labs, and controlling axes
plot(selfesteem.data$Selfesteem,selfesteem.data$Height,
main="Scatterplot of Person Height versus Self Esteem",
xlab = "Height", ylab="Self Esteem",
xlim=c(2, 4), ylim=c(50, 100), pch = 8, col="seagreen3",
cex=1.5, cex.lab = 1.5, cex.main = 1.5)
#Scatterplot with labs, and controlling axes
plot(selfesteem.data$Height,selfesteem.data$Selfesteem,
main="Scatterplot of Person Height versus Self Esteem",
xlab = "Height", ylab="Self Esteem",
xlim=c(2, 4), ylim=c(50, 100), pch = 8, col="seagreen3",
cex=1.5, cex.lab = 1.5, cex.main = 1.5)
plot(selfesteem.data$Selfesteem,selfesteem.data$Height)
#Basic Scatterplot
?plot
#Scatterplot with labs, and controlling axes
plot(selfesteem.data$Height,selfesteem.data$Selfesteem,
main="Scatterplot of Person Height versus Self Esteem",
xlab = "Height", ylab="Self Esteem",
xlim=c(2, 4), ylim=c(50, 100), pch = 8, col="seagreen3",
cex=1.5, cex.lab = 1.5, cex.main = 1.5)
#Scatterplot with labs, and controlling axes
plot(selfesteem.data$Selfesteem,selfesteem.data$Height,
main="Scatterplot of Person Height versus Self Esteem",
xlab = "Height", ylab="Self Esteem",
xlim=c(2, 4), ylim=c(50, 100), pch = 8, col="seagreen3",
cex=1.5, cex.lab = 1.5, cex.main = 1.5)
#Calculate Sample Correlation
cor(housedata$Selfesteem,housedata$Height)
#Calculate Sample Correlation
cor(selfesteem.data$Selfesteem,selfesteem.data$Height)
#Calculate Sample Correlation
cor(selfesteem.data$Height,selfesteem.data$Selfesteem)
#Calculate Sample Correlation
cor(selfesteem.data$Height,selfesteem.data$Selfesteem)
#Read in data
selfesteem.data <- read.csv(".\\lab02.csv")
selfesteem.data
#Read in data
selfesteem.data <- read.csv(".\\lab02.csv")
selfesteem.data
#Basic Scatterplot
?plot
plot(selfesteem.data$Selfesteem,selfesteem.data$Height)
#Scatterplot with labs, and controlling axes
plot(selfesteem.data$Selfesteem,selfesteem.data$Height,
main="Scatterplot of Person Height versus Self Esteem",
xlab = "Height", ylab="Self Esteem",
xlim=c(2, 4), ylim=c(50, 100), pch = 8, col="seagreen3",
cex=1.5, cex.lab = 1.5, cex.main = 1.5)
#Calculate Sample Correlation
cor(selfesteem.data$Height,selfesteem.data$Selfesteem)
#Read in data
selfesteem.data <- read.csv(".\\lab02.csv")
selfesteem.data
#Basic Scatterplot
?plot
plot(selfesteem.data$Selfesteem,selfesteem.data$Height)
#Scatterplot with labs, and controlling axes
plot(selfesteem.data$Selfesteem,selfesteem.data$Height,
main="Scatterplot of Person Height versus Self Esteem",
xlab = "Height", ylab="Self Esteem",
xlim=c(2, 4), ylim=c(50, 100), pch = 8, col="seagreen3",
cex=1.5, cex.lab = 1.5, cex.main = 1.5)
#Calculate Sample Correlation
cor(selfesteem.data$Height,selfesteem.data$Selfesteem)
#Calculate Sample Correlation
cor(selfesteem.data$Height,selfesteem.data$Selfesteem)
#Calculate Sample Correlation
cor(selfesteem.data$Selfesteem,selfesteem.data$Height)
#Calculate Sample Correlation
cor(selfesteem.data$Height,selfesteem.data$Selfesteem)
#Calculate Sample Correlation
cor(selfesteem.data$Height,selfesteem.data$Selfesteem, use="pairwise.complete.obs")
#Calculate Sample Correlation
cor(selfesteem.data$Height,selfesteem.data$Selfesteem, use="pairwise.complete.obs")
#Read in data
selfesteem.data <- read.csv(".\\lab02.csv")
selfesteem.data
#Basic Scatterplot
?plot
plot(selfesteem.data$Selfesteem,selfesteem.data$Height)
#Scatterplot with labs, and controlling axes
plot(selfesteem.data$Selfesteem,selfesteem.data$Height,
main="Scatterplot of Person Height versus Self Esteem",
xlab = "Height", ylab="Self Esteem",
xlim=c(2, 4), ylim=c(50, 100), pch = 8, col="seagreen3",
cex=1.5, cex.lab = 1.5, cex.main = 1.5)
#Calculate Sample Correlation
cor(selfesteem.data$Height,selfesteem.data$Selfesteem, use="pairwise.complete.obs")
#Read in data
selfesteem.data <- read.csv(".\\lab02.csv")
selfesteem.data
#Basic Scatterplot
?plot
plot(selfesteem.data$Selfesteem,selfesteem.data$Height)
#Read in data
selfesteem.data <- read.csv(".\\lab02.csv")
selfesteem.data
#Basic Scatterplot
?plot
plot(selfesteem.data$Selfesteem,selfesteem.data$Height)
#Scatterplot with labs, and controlling axes
plot(selfesteem.data$Selfesteem,selfesteem.data$Height,
main="Scatterplot of Person Height versus Self Esteem",
xlab = "Height", ylab="Self Esteem",
xlim=c(2, 4), ylim=c(50, 100), pch = 8, col="seagreen3",
cex=1.5, cex.lab = 1.5, cex.main = 1.5)
#Calculate Sample Correlation
cor(selfesteem.data$Height,selfesteem.data$Selfesteem, use="pairwise.complete.obs")
mode(selfesteem.data$Height)
mode(selfesteem.data$Selfesteem)
selfesteem.data$Height
#Read in data
selfesteem.data <- read.csv(".\\lab02.csv")
selfesteem.data
#Read in data
selfesteem.data <- read.csv(".\\Book1.csv")
selfesteem.data
#Calculate Sample Correlation
cor(selfesteem.data$Height,selfesteem.data$Selfesteem, use="pairwise.complete.obs")
#Read in data
selfesteem.data <- read.csv(".\\lab02.csv")
selfesteem.data
#Basic Scatterplot
?plot
plot(selfesteem.data$Selfesteem,selfesteem.data$Height)
#Scatterplot with labs, and controlling axes
plot(selfesteem.data$Selfesteem,selfesteem.data$Height,
main="Scatterplot of Person Height versus Self Esteem",
xlab = "Height", ylab="Self Esteem",
xlim=c(2, 4), ylim=c(50, 100), pch = 8, col="seagreen3",
cex=1.5, cex.lab = 1.5, cex.main = 1.5)
plot(selfesteem.data$Height,selfesteem.data$Selfesteem)
#Scatterplot with labs, and controlling axes
plot(selfesteem.data$Height,selfesteem.data$Selfesteem,
main="Scatterplot of Person Height versus Self Esteem",
xlab = "Height", ylab="Self Esteem",
xlim=c(2, 4), ylim=c(50, 100), pch = 8, col="seagreen3",
cex=1.5, cex.lab = 1.5, cex.main = 1.5)
#Scatterplot with labs, and controlling axes
plot(selfesteem.data$Height,selfesteem.data$Selfesteem,
main="Scatterplot of Person Height versus Self Esteem",
xlab = "Height", ylab="Self Esteem",
xlim=c(50, 100), ylim=c(2, 4), pch = 8, col="seagreen3",
cex=1.5, cex.lab = 1.5, cex.main = 1.5)
#Scatterplot with labs, and controlling axes
plot(selfesteem.data$Height,selfesteem.data$Selfesteem,
main="Scatterplot of Person Height versus Self Esteem",
xlab = "Height", ylab="Self Esteem",
xlim=c(50, 75), ylim=c(2, 4), pch = 8, col="seagreen3",
cex=1.5, cex.lab = 1.5, cex.main = 1.5)
#Scatterplot with labs, and controlling axes
plot(selfesteem.data$Height,selfesteem.data$Selfesteem,
main="Scatterplot of Person Height versus Self Esteem",
xlab = "Height", ylab="Self Esteem",
xlim=c(55, 75), ylim=c(2, 4), pch = 8, col="seagreen3",
cex=1.5, cex.lab = 1.5, cex.main = 1.5)
#Scatterplot with labs, and controlling axes
plot(selfesteem.data$Height,selfesteem.data$Selfesteem,
main="Scatterplot of Person Height versus Self Esteem",
xlab = "Height", ylab="Self Esteem",
xlim=c(55, 75), ylim=c(2, 4.5), pch = 8, col="seagreen3",
cex=1.5, cex.lab = 1.5, cex.main = 1.5)
#Scatterplot with labs, and controlling axes
plot(selfesteem.data$Height,selfesteem.data$Selfesteem,
main="Scatterplot of Person Height versus Self Esteem",
xlab = "Height", ylab="Self Esteem",
xlim=c(55, 75), ylim=c(2, 5.5), pch = 8, col="seagreen3",
cex=1.5, cex.lab = 1.5, cex.main = 1.5)
#Scatterplot with labs, and controlling axes
plot(selfesteem.data$Height,selfesteem.data$Selfesteem,
main="Scatterplot of Person Height versus Self Esteem",
xlab = "Height", ylab="Self Esteem",
xlim=c(55, 75), ylim=c(2.5, 5.5), pch = 8, col="seagreen3",
cex=1.5, cex.lab = 1.5, cex.main = 1.5)
#Calculate Sample Correlation
cor(selfesteem.data$Height,selfesteem.data$Selfesteem, use="pairwise.complete.obs")
mode(selfesteem.data$Height)
sd(selfesteem.data$Height)
sd(selfesteem.data$Selfesteem)
x.sd <- sd(selfesteem.data$Height)
y.sd <- sd(selfesteem.data$Selfesteem)
x
y
x.sd
y.sd
x.mean <- mean(selfesteem.data$Height)
y.mean <- mean(selfesteem.data$Selfesteem)
x.mean
y.mean
x.sd
y.sd
#Calculate Sample Correlation
cor(selfesteem.data$Height,selfesteem.data$Selfesteem, use="pairwise.complete.obs")
lm(selfesteem.data$Selfesteem~selfesteem.data$Height)
lm(selfesteem.data$Height~selfesteem.data$Selfesteem)
#Simple Linear Regression
lm(selfesteem.data$Height~selfesteem.data$Selfesteem)
#Simple Linear Regression
lm(selfesteem.data$Height~selfesteem.data$Selfesteem)
#Simple Linear Regression
lm(selfesteem.data$Selfesteem~selfesteem.data$Height)
#Simple Linear Regression
m <- lm(selfesteem.data$Selfesteem~selfesteem.data$Height)
#Adding regression line to the current plot
abline(m,col="red")
#Simple Linear Regression
m <- lm(selfesteem.data$Selfesteem~selfesteem.data$Height)
m
#Request important summary information from R about the model
summary(m)
#Request important summary information from R about the model
summary(m)
beta1 <- cor(selfesteem.data$Height,selfesteem.data$Selfesteem) * sd(selfesteem.data$Selfesteem)/sd(selfesteem.data$Height)
beta1
beta0 <- mean(selfesteem.data$Selfesteem)-beta1*mean(selfesteem.data$Height)
beta0
fitted(m)
?fitted
#compute R square by hand
totalss <-sum((selfesteem.data$Selfesteem -mean(selfesteem.data$Selfesteem))^2)
regss <-sum((fitted(m) -mean(selfesteem.data$Selfesteem))^2)
residss <-sum((selfesteem.data$Selfesteem-fitted(m))^2)
rsquare <- regss/totalss
rsquare
#Adding regression line to the current plot
abline(m,col="red")
x.mean
y.mean
plot(65.28, 3.76)
#Scatterplot with labs, and controlling axes
plot(selfesteem.data$Height,selfesteem.data$Selfesteem,
main="Scatterplot of Person Height versus Self Esteem",
xlab = "Height", ylab="Self Esteem",
xlim=c(55, 75), ylim=c(2.5, 5.5), pch = 8, col="seagreen3",
cex=1.5, cex.lab = 1.5, cex.main = 1.5)
plot(selfesteem.data$Height,selfesteem.data$Selfesteem)
#Scatterplot with labs, and controlling axes
plot(selfesteem.data$Height,selfesteem.data$Selfesteem,
main="Scatterplot of Person Height versus Self Esteem",
xlab = "Height", ylab="Self Esteem",
xlim=c(55, 75), ylim=c(2.5, 5.5), pch = 8, col="seagreen3",
cex=1.5, cex.lab = 1.5, cex.main = 1.5)
#Adding regression line to the current plot
abline(m,col="red")
points(65.28, 3.76, col="red", pch=19)
plot(selfesteem.data$Height,selfesteem.data$Selfesteem)
#Scatterplot with labs, and controlling axes
plot(selfesteem.data$Height,selfesteem.data$Selfesteem,
main="Scatterplot of Person Height versus Self Esteem",
xlab = "Height", ylab="Self Esteem",
xlim=c(55, 75), ylim=c(2.5, 5.5), pch = 8, col="seagreen3",
cex=1.5, cex.lab = 1.5, cex.main = 1.5)
x.mean <- mean(selfesteem.data$Height)
x.mean
y.mean <- mean(selfesteem.data$Selfesteem)
y.mean
points(65.28, 3.76, col="red", pch=19)
#Adding regression line to the current plot
abline(m,col="red")
#Scatterplot with labs, and controlling axes
plot(selfesteem.data$Height,selfesteem.data$Selfesteem,
main="Scatterplot of Person Height versus Self Esteem",
xlab = "Height", ylab="Self Esteem",
xlim=c(55, 75), ylim=c(2.5, 5.5), pch = 8, col="seagreen3",
cex=1.5, cex.lab = 1.5, cex.main = 1.5)
x.mean <- mean(selfesteem.data$Height)
x.mean
y.mean <- mean(selfesteem.data$Selfesteem)
y.mean
points(65.28, 3.76, col="red", pch=19)
x.sd <- sd(selfesteem.data$Height)
x.sd
y.sd <- sd(selfesteem.data$Selfesteem)
y.sd
#Calculate Sample Correlation
cor(selfesteem.data$Height,selfesteem.data$Selfesteem, use="pairwise.complete.obs")
#Simple Linear Regression
m <- lm(selfesteem.data$Selfesteem~selfesteem.data$Height)
m
#Adding regression line to the current plot
abline(m,col="red")
#Read in data
prestige.data <- read.csv(".\\lab3-data.csv")
prestige.data
#Basic Scatterplot
?plot
plot(prestige.data$PrestigeScore,prestige.data$EducationLevel)
#Scatterplot with labs, and controlling axes
plot(prestige.data$PrestigeScore,prestige.data$EducationLevel,
main="Scatterplot of Person Prestige Score Based On Education Level",
xlab = "EducationLevel", ylab="Prestige Score",
xlim=c(55, 75), ylim=c(2.5, 5.5), pch = 8, col="seagreen3",
cex=1.5, cex.lab = 1.5, cex.main = 1.5)
#Scatterplot with labs, and controlling axes
plot(prestige.data$PrestigeScore,prestige.data$EducationLevel,
main="Scatterplot of Person Prestige Score Based On Education Level",
xlab = "EducationLevel", ylab="Prestige Score",
xlim=c(55, 75), ylim=c(20, 80), pch = 8, col="seagreen3",
cex=1.5, cex.lab = 1.5, cex.main = 1.5)
#Scatterplot with labs, and controlling axes
plot(prestige.data$PrestigeScore,prestige.data$EducationLevel,
main="Scatterplot of Person Prestige Score Based On Education Level",
xlab = "EducationLevel", ylab="Prestige Score",
xlim=c(5, 20), ylim=c(20, 80), pch = 8, col="seagreen3",
cex=1.5, cex.lab = 1.5, cex.main = 1.5)
#Scatterplot with labs, and controlling axes
plot(prestige.data$PrestigeScore,prestige.data$EducationLevel,
main="Scatterplot of Person Prestige Score Based On Education Level",
xlab = "EducationLevel", ylab="Prestige Score",
xlim=c(20, 80), ylim=c(5, 20), pch = 8, col="seagreen3",
cex=1.5, cex.lab = 1.5, cex.main = 1.5)
#Scatterplot with labs, and controlling axes
plot(prestige.data$PrestigeScore,prestige.data$EducationLevel,
main="Scatterplot of Person Prestige Score Based On Education Level",
xlab = "EducationLevel", ylab="Prestige Score",
xlim=c(20, 90), ylim=c(5, 20), pch = 8, col="seagreen3",
cex=1.5, cex.lab = 1.5, cex.main = 1.5)
#Scatterplot with labs, and controlling axes
plot(prestige.data$PrestigeScore,prestige.data$EducationLevel,
main="Scatterplot of Person Prestige Score Based On Education Level",
xlab = "EducationLevel", ylab="Prestige Score",
xlim=c(10, 90), ylim=c(5, 20), pch = 8, col="seagreen3",
cex=1.5, cex.lab = 1.5, cex.main = 1.5)
#Calculate Sample Correlation
cor(prestige.data$EducationLevel,prestige.data$PrestigeScore, use="pairwise.complete.obs")
#Simple Linear Regression
m <- lm(prestige.data$PrestigeScore~prestige.data$EducationLevel+prestige.data$Income+prestige.data$PercentOfWomen)
m
#Request important summary information from R about the model
summary(m)
#compute R^2
totalss <-sum((prestige.data$PrestigeScore - mean(prestige.data$PrestigeScore))^2)
regss <-sum((fitted(m) -mean(prestige.data$PrestigeScore))^2)
residss <-sum((prestige.data$PrestigeScore-fitted(m))^2)
rsquare <- regss/totalss
rsquare
#read in data
data <- read.csv(".\\lab4-data.csv")
data
#simple logistic regression model
m<-glm(data$Pain ~ data$Treatment, family = binomial)
summary(m)
summary(data)
summary(data[,c(1,4)])
# summary for 2 columns (tratement, pain)
summary(data[,c(1,length(data))])
#ORs per 1 unit increase
exp(0.02119)
exp(m$coefficients[2])
#OR per 10 unit increase
exp(m$coefficients[2]*10)
#compute McFadden's pseudo-R squared
#m<-glm(data$event ~ data$chol, family = binomial)
nullm <- glm(data$Pain ~ 1, family="binomial")
rsquare = 1-logLik(m)/logLik(nullm)
rsquare
#multiple logistic regression model
multi.m<-glm(data$Pain ~ data$Treatment+data$Age+data$Severe, family = binomial)
summary(multi.m)
#ORs per 1 unit increase
exp(0.02119)
exp(multi.m$coefficients[2])
multi.m$coefficients
#ORs per 1 unit increase
exp(0.02119)
exp(multi.m$coefficients[3])
#OR per 10 unit increase
exp(m$coefficients[3]*10)
#OR per 10 unit increase
exp(multi.m$coefficients[3]*10)
exp(0.02119)
#read in data
data <- read.csv(".\\lab4-data.csv")
data
# summary for 2 columns (tratement, pain)
summary(data[,c(1,length(data))])
#simple logistic regression model
m<-glm(data$Pain ~ data$Treatment, family = binomial)
summary(m)
#compute McFadden's pseudo-R squared
#m<-glm(data$event ~ data$chol, family = binomial)
nullm <- glm(data$Pain ~ 1, family="binomial")
rsquare = 1-logLik(m)/logLik(nullm)
rsquare
#multiple logistic regression model
multi.m<-glm(data$Pain ~ data$Treatment+data$Age+data$Severe, family = binomial)
summary(multi.m)
multi.m$coefficients
exp(0.02119)
# Odd per 1 unit increase in treatment
exp(multi.m$coefficients[2])
# Odd per 10 unit increase in age
exp(multi.m$coefficients[3]*10)
# Odd per 1 unit increase in severity
exp(multi.m$coefficients[4])
# Odd per 1 unit increase in treatment
exp(multi.m$coefficients[2])
# Odd per 10 unit increase in age
exp(multi.m$coefficients[3]*10)
# Odd per 1 unit increase in severity
exp(multi.m$coefficients[4])
multi.rsquare = 1-logLik(multi.m)/logLik(nullm)
multi.rsquare
rsquare
rsquare
multi.rsquare
rsquare
multi.rsquare
